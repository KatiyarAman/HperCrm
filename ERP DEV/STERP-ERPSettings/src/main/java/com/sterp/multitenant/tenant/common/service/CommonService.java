package com.sterp.multitenant.tenant.common.service;

import java.io.IOException;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.sql.rowset.serial.SerialException;

import org.springframework.core.io.Resource;
import org.springframework.web.multipart.MultipartFile;

import com.sterp.multitenant.tenant.campaign.Campaign;
import com.sterp.multitenant.tenant.dto.CommonDropdownResponseDataTravelObject;
import com.sterp.multitenant.tenant.dto.CommonDropdownResponseDto;
import com.sterp.multitenant.tenant.dto.CommonPagingResponse;
import com.sterp.multitenant.tenant.dto.CommonRequestFilterDTO;
import com.sterp.multitenant.tenant.uploadutility.dto.ExcelResponse;
import com.sterp.multitenant.tenant.uploadutility.entity.Documents;

public interface CommonService {
	// public <T> List<T> getAllData(Class<T> T);

	public Map<String, Object> addUpdate(HttpServletRequest request, Object obj, MultipartFile[] files);

	public Map<String, Object> addUpdate(Object obj);

	// public List<CommonDropdownResponseDataTravelObject> getSelectionList(Class T,
	// long id, String Name, List<CommonRequestFilterDTO> filter);

	public <T> CommonPagingResponse<T> getCommonFilteredList(Class<T> T, Map<String, Object> params);

	List<CommonDropdownResponseDataTravelObject> getSelectionList(String T, String id, String name,
			List<CommonRequestFilterDTO> filters);
	
	public String getFolderFields(long moduleId);
	
	public <T> T getById(Class<T> T, Long id);					// Get Bean Name and serializable id and return bean object
	
	public List<CommonDropdownResponseDto> getAutogeneratedFields(String T, long moduleId);		// which field want in return

	public <T> String getLastGeneratedCode(Class<T> T, Long branchId, Long companyId, String field);

	public <R> String getRefLastGeneratedCode(Class<R> R, long refDocId, String name);

	public <T> List<T> getCommonList(Class<T> T);
	
	public <T> List<T> getCustomFieldByModuleId(Class<T> T, Long moduleId);

	List getCommonListByNativeQuery();

	public <T> List<T> getByFilters(Class<T> T, Map<String, Object> filters);
	
	public List<ExcelResponse> callReadFile(MultipartFile files, String fileName) throws IOException;

	public List<Documents> getDocuments(Long id, Long moduleId);

	public Resource download(Long id,Long vid);

	public Map<String, Object> uploadData(Map<String, Object> object, MultipartFile[] files,
			HttpServletRequest request, Object obj) throws SerialException, SQLException;

	public Map<String, Object> moduleDocuments(Map<String, Object> object, HttpServletRequest request);
}
